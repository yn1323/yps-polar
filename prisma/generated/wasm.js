
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ShopUserBelongingScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  userId: 'userId',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.OrganizationShopBelongingScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  shopId: 'shopId',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  organizationName: 'organizationName',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.ShopScalarFieldEnum = {
  id: 'id',
  shopName: 'shopName',
  openTime: 'openTime',
  closeTime: 'closeTime',
  timeUnit: 'timeUnit',
  submitFrequency: 'submitFrequency',
  avatar: 'avatar',
  useTimeCard: 'useTimeCard',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  userName: 'userName',
  avatar: 'avatar',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  invitedByShopId: 'invitedByShopId',
  targetUserId: 'targetUserId',
  accepted: 'accepted',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OperationScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  operationName: 'operationName',
  icon: 'icon',
  color: 'color',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.StableShiftScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  userId: 'userId',
  workFrom: 'workFrom',
  workTo: 'workTo',
  breakFrom: 'breakFrom',
  breakTo: 'breakTo',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.UnstableShiftScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  userId: 'userId',
  workFrom: 'workFrom',
  workTo: 'workTo',
  breakFrom: 'breakFrom',
  breakTo: 'breakTo',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.RequestScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  userId: 'userId',
  dateFrom: 'dateFrom',
  dateTo: 'dateTo',
  done: 'done',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.TimeCardScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  userId: 'userId',
  workFrom: 'workFrom',
  workTo: 'workTo',
  breakFrom: 'breakFrom',
  breakTo: 'breakTo',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.TemporaryClosedScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  shopId: 'shopId',
  date: 'date',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.AnnounceScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  shopId: 'shopId',
  message: 'message',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  ShopUserBelonging: 'ShopUserBelonging',
  OrganizationShopBelonging: 'OrganizationShopBelonging',
  Organization: 'Organization',
  Shop: 'Shop',
  User: 'User',
  Invitation: 'Invitation',
  Operation: 'Operation',
  StableShift: 'StableShift',
  UnstableShift: 'UnstableShift',
  Request: 'Request',
  TimeCard: 'TimeCard',
  TemporaryClosed: 'TemporaryClosed',
  Announce: 'Announce'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
